{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/name-editor/name-editor.component.css","webpack:///./src/app/name-editor/name-editor.component.html","webpack:///./src/app/name-editor/name-editor.component.ts","webpack:///./src/app/profile-editor/profile-editor.component.css","webpack:///./src/app/profile-editor/profile-editor.component.html","webpack:///./src/app/profile-editor/profile-editor.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-name-editor></app-name-editor>\\n<app-profile-editor></app-profile-editor>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'reactive-form';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NameEditorComponent } from './name-editor/name-editor.component';\nimport { ProfileEditorComponent } from './profile-editor/profile-editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NameEditorComponent,\n    ProfileEditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hbWUtZWRpdG9yL25hbWUtZWRpdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<label>\\n  Name:\\n  <input type=\\\"text\\\" [formControl]=\\\"name\\\">\\n</label>\\n<p>\\n  <button (click)=\\\"updateName()\\\">Update Name</button>\\n</p>\\n<p>\\n  Value: {{ name.value }}\\n</p>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-name-editor',\n  templateUrl: './name-editor.component.html',\n  styleUrls: ['./name-editor.component.css']\n})\nexport class NameEditorComponent implements OnInit {\n\n  name = new FormControl('');\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  updateName() {\n    this.name.setValue('Nancy');\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtZWRpdG9yL3Byb2ZpbGUtZWRpdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <label>\\n    First Name:\\n    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" required>\\n  </label>\\n\\n  <label>\\n    Last Name:\\n    <input type=\\\"text\\\" formControlName=\\\"lastName\\\">\\n  </label>\\n  <div formGroupName=\\\"address\\\">\\n    <h3>Address</h3>\\n  \\n    <label>\\n      Street:\\n      <input type=\\\"text\\\" formControlName=\\\"street\\\">\\n    </label>\\n  \\n    <label>\\n      City:\\n      <input type=\\\"text\\\" formControlName=\\\"city\\\">\\n    </label>\\n    \\n    <label>\\n      State:\\n      <input type=\\\"text\\\" formControlName=\\\"state\\\">\\n    </label>\\n  \\n    <label>\\n      Zip Code:\\n      <input type=\\\"text\\\" formControlName=\\\"zip\\\">\\n    </label>\\n  </div>\\n  <button type=\\\"submit\\\" [disabled]=\\\"!profileForm.valid\\\">Submit</button>\\n  <p>\\n    <button (click)=\\\"updateProfile()\\\">Update Profile</button>\\n  </p>\\n\\n  <div formArrayName=\\\"aliases\\\">\\n    <h3>Aliases</h3> <button (click)=\\\"addAlias()\\\">Add Alias</button>\\n  \\n    <div *ngFor=\\\"let address of aliases.controls; let i=index\\\">\\n      <!-- The repeated alias template -->\\n      <label>\\n        Alias:\\n        <input type=\\\"text\\\" [formControlName]=\\\"i\\\">\\n      </label>\\n    </div>\\n  </div>\\n</form>\\n<p>\\n  Form Status: {{ profileForm.value | json }}\\n</p>\\n<p>\\n  Form Status: {{ profileForm.status }}\\n</p>\\n\\n\"","/**\n * forms\n * Template Driven Forms Features\n * Easy to use\n * Suitable for simple scenarios and fails for complex scenarios\n * Similar to AngularJS\n * Two way data binding(using [(NgModel)] syntax)\n * Minimal component\n * Automatic track of the form and its data(handled by Angular)\n * Unit testing is another challenge\n * Reactive Forms Features\n * More flexible, but needs a lot of practice\n * Handles any complex scenarios\n * No data binding is done (immutable data model preferred by most developers)\n * More component code and less HTML markup\n * Reactive transformations can be made possible such as\n * Handling a event based on a debounce time\n * Handling events when the components are distinct until changed\n * Adding elements dynamically\n * Easier unit testing\n * With the template driven approach you basically apply directives, such as ngModel,\n * in your template. Based on these directives Angular will create formcontrol objects.\n * This approach is good for building simple forms with basic validation (required, minlength, maxlength,...).\n * With the reactive approach you basically need to create new instances of the formcontrols and formcontrolgroups in your component. \n * Reactive forms are also the best choice for building more complex forms and are better in case you\n * have the intention to implement unit testing for your forms.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n  FormArray\n} from \"@angular/forms\";\nimport {} from \"@angular/forms\";\n@Component({\n  selector: \"app-profile-editor\",\n  templateUrl: \"./profile-editor.component.html\",\n  styleUrls: [\"./profile-editor.component.css\"]\n})\nexport class ProfileEditorComponent implements OnInit {\n  // profileForm = new FormGroup({\n  //   firstName: new FormControl(''),\n  //   lastName: new FormControl(''),\n  //   address: new FormGroup({\n  //     street: new FormControl(''),\n  //     city: new FormControl(''),\n  //     state: new FormControl(''),\n  //     zip: new FormControl('')\n  //   })\n  // });\n\n  profileForm = this.fb.group({\n    firstName: [\"\", Validators.required],\n    lastName: [\"\"],\n    address: this.fb.group({\n      street: [\"\"],\n      city: [\"\"],\n      state: [\"\"],\n      zip: [\"\"]\n    }),\n    aliases: this.fb.array([this.fb.control(\"\")])\n  });\n\n  constructor(private fb: FormBuilder) {}\n  ngOnInit() {}\n\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n    console.warn(this.profileForm.value);\n  }\n\n  updateProfile() {\n    this.profileForm.patchValue({\n      firstName: \"Nancy\",\n      address: {\n        street: \"123 Drew Street\"\n      }\n    });\n  }\n  get aliases() {\n    return this.profileForm.get(\"aliases\") as FormArray;\n  }\n  addAlias() {\n    this.aliases.push(this.fb.control(\"\"));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}